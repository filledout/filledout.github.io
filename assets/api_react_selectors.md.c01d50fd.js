import{_ as e,c as o,o as s,a as t}from"./app.2524b8b6.js";const p=JSON.parse('{"title":"Selectors","description":"","frontmatter":{},"headers":[],"relativePath":"api/react/selectors.md"}'),r={name:"api/react/selectors.md"},i=t('<h1 id="selectors" tabindex="-1">Selectors <a class="header-anchor" href="#selectors" aria-hidden="true">#</a></h1><p><code>useField()</code> uses those methods under the hood and if you&#39;re not ok with how useField works you can use those ones to combine your own useField. Most of them call useStoreMap with field path as key</p><ul><li><code>useDirty</code> - returns boolean dirty state</li><li><code>useValue</code> - returns current values for a field</li><li><code>useErrors</code> - returns field errors</li><li><code>useFocused</code> - returns if field is focused</li><li><code>useTouched</code> - returns if field is touched</li><li><code>useSubmitted</code> - returns if parent for is submitted</li><li><code>useExternalErrors</code> - returns external errors associated with the field</li></ul>',3),c=[i];function d(a,l,u,n,_,h){return s(),o("div",null,c)}const m=e(r,[["render",d]]);export{p as __pageData,m as default};
